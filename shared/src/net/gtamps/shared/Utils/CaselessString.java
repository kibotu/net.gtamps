package net.gtamps.shared.Utils;

import java.io.Serializable;
import java.util.Locale;

import net.gtamps.shared.Utils.validate.Validate;

/**
 * An immutable class representing case-ignoring strings, to be used for consistent
 * comparison and hash codes.
 * <p/>
 * Uses {@link Locale#ENGLISH} to normalize case, so if your current locale has
 * different ideas of which characters are considered different case versions of
 * the same letter, this class can't accomodate you. Sorry.
 *
 * @author Jan Rabe, Tom Wallroth, Til Boerner
 *
 */
public class CaselessString implements Comparable<CaselessString>, Cloneable, Serializable {

	public static final Locale DEFAULT_LOCALE = Locale.ENGLISH;

	/** generated by eclipse */
	private static final long serialVersionUID = 7601277506663150099L;

	private final String string;

	public CaselessString(final String s) {
		super();
		Validate.notNull(s);
		string = s;
	}

	@Override
	public int compareTo(final CaselessString other) {
		return normalize().compareTo(other.normalize());
	}

	private volatile Integer hashCode = null;
	@Override
	public int hashCode() {
		if (hashCode == null) {
			hashCode = normalize().hashCode();
		}
		return hashCode;
	}

	@Override
	public boolean equals(final Object o) {
		return o instanceof CaselessString && normalize().equals(((CaselessString)o).normalize());
	}

	@Override
	public String toString() {
		return string;
	}

	@Override
	public CaselessString clone() {
		return new CaselessString(string);
	}

	private String normalize() {
		return string.toUpperCase(DEFAULT_LOCALE);
	}

}
