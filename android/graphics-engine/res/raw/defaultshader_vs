precision mediump float;
// Uniform variables. Set from the application.
uniform mat4 u_WorldView;		    // we need vector from vertex to eye
uniform mat4 u_WorldViewProjection;	// normal transform for vertex
uniform mat4 u_ModelViewMatrix;     // model matrix
uniform vec3 u_LightPosition;

// in
attribute vec3 in_Position;
attribute vec3 in_Normal;
attribute vec2 in_TexCoords;

// out
varying vec3 v_ViewSpacePosition;
varying vec3 v_VertexToLight;
varying vec3 v_Normal;
varying vec2 v_TexCoords;

// The main entry point.
void main() {

  // position
  vec4 position =  u_WorldView *  u_ModelViewMatrix * vec4(in_Position, 1.);

  // Transform to camera coordinates.
  v_Normal = (u_WorldView * u_ModelViewMatrix * vec4(in_Normal, 0.0)).xyz;

  // Calculate values in camera coordinates.
  v_ViewSpacePosition = -in_Position.xyz;
  v_VertexToLight = u_LightPosition - position.xyz;

  // Transform the vertex position to NDC.
  gl_Position = u_WorldViewProjection * position;

  // uv
  v_TexCoords = in_TexCoords;
}
